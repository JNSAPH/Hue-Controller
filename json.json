{
    _events: [Object: null prototype] {
      error: [Function: bound ],
      complete: [Function: bound ],
      pipe: [Function]
    },
    _eventsCount: 3,
    _maxListeners: undefined,
    uri: Url {
      protocol: 'https:',
      slashes: true,
      auth: null,
      host: 'discovery.meethue.com',
      port: 443,
      hostname: 'discovery.meethue.com',
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: 'https://discovery.meethue.com/'
    },
    callback: [Function],
    readable: true,
    writable: true,
    _qs: Querystring {
      request: [Circular],
      lib: { formats: [Object], parse: [Function], stringify: [Function] },
      useQuerystring: undefined,
      parseOptions: {},
      stringifyOptions: {}
    },
    _auth: Auth {
      request: [Circular],
      hasAuth: false,
      sentAuth: false,
      bearerToken: null,
      user: null,
      pass: null
    },
    _oauth: OAuth { request: [Circular], params: null },
    _multipart: Multipart {
      request: [Circular],
      boundary: 'f6ae95ea-3250-405b-8d6d-d0fd8c9ae7c8',
      chunked: false,
      body: null
    },
    _redirect: Redirect {
      request: [Circular],
      followRedirect: true,
      followRedirects: true,
      followAllRedirects: false,
      followOriginalHttpMethod: false,
      allowRedirect: [Function],
      maxRedirects: 10,
      redirects: [],
      redirectsFollowed: 0,
      removeRefererHeader: false
    },
    _tunnel: Tunnel {
      request: [Circular],
      proxyHeaderWhiteList: [
        'accept',           'accept-charset',
        'accept-encoding',  'accept-language',
        'accept-ranges',    'cache-control',
        'content-encoding', 'content-language',
        'content-location', 'content-md5',
        'content-range',    'content-type',
        'connection',       'date',
        'expect',           'max-forwards',
        'pragma',           'referer',
        'te',               'user-agent',
        'via'
      ],
      proxyHeaderExclusiveList: []
    },
    headers: { host: 'discovery.meethue.com' },
    setHeader: [Function],
    hasHeader: [Function],
    getHeader: [Function],
    removeHeader: [Function],
    method: 'GET',
    localAddress: undefined,
    pool: {},
    dests: [],
    __isRequestRequest: true,
    _callback: [Function],
    proxy: null,
    tunnel: true,
    setHost: true,
    originalCookieHeader: undefined,
    _disableCookies: true,
    _jar: undefined,
    port: 443,
    host: 'discovery.meethue.com',
    path: '/',
    httpModule: {
      Agent: [Function: Agent],
      globalAgent: Agent {
        _events: [Object: null prototype],
        _eventsCount: 2,
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: [Object],
        requests: {},
        sockets: {},
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        maxCachedSessions: 100,
        _sessionCache: [Object],
        [Symbol(kCapture)]: false
      },
      Server: [Function: Server],
      createServer: [Function: createServer],
      get: [Function: get],
      request: [Function: request]
    },
    agentClass: [Function: Agent],
    agent: Agent {
      _events: [Object: null prototype] {
        free: [Function],
        newListener: [Function: maybeEnableKeylog]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: { path: null },
      requests: {},
      sockets: {},
      freeSockets: {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      maxCachedSessions: 100,
      _sessionCache: { map: {}, list: [] },
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false
  }
  PS C:\Users\JNSAP\Desktop\HueController> 